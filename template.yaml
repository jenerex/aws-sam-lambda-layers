AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: "Basic Auth API with Hello, Signup and Home functions using Lambda Layers"

Globals:
  Function:
    Runtime: nodejs18.x
    Timeout: 5
    MemorySize: 128

Parameters:
  MongoUriParam:
    Type: String
    Description: MongoDB connection string

Resources:
  # Lambda Layer for dependencies
  NodeModulesLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: node-modules-layer
      Description: "Shared Node.js dependencies for all Lambdas"
      ContentUri: layers/nodejs
      CompatibleRuntimes:
        - nodejs18.x

  # Define API Gateway explicitly (so we can set stage + CORS)
  ServerlessRestApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod
      Cors:
        AllowMethods: "'OPTIONS,GET,POST'"
        AllowHeaders: "'Content-Type,Authorization'"
        AllowOrigin: "'*'"

  # Signup Lambda
  SignupFunction:
    Type: AWS::Serverless::Function 
    Properties:
      FunctionName: auth-signup
      Handler: dist/handlers/auth.signup
      CodeUri: .
      Layers:
        - !Ref NodeModulesLayer
      Events:
        Signup:
          Type: Api
          Properties:
            RestApiId: !Ref ServerlessRestApi
            Path: /signup
            Method: post
      Environment:
        Variables:
          MONGO_URI: !Ref MongoUriParam

  # Home Lambda
  HomeFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: auth-home
      Handler: dist/handlers/auth.home
      CodeUri: .
      Layers:
        - !Ref NodeModulesLayer
      Events:
        Home:
          Type: Api
          Properties:
            RestApiId: !Ref ServerlessRestApi
            Path: /home
            Method: get
      Environment:
        Variables:
          MONGO_URI: !Ref MongoUriParam

Outputs:
  ApiUrl:
    Description: "API Gateway endpoint"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/prod"
